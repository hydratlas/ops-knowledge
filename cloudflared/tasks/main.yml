---
# Tasks for cloudflared role

- name: Create cloudflared system user
  ansible.builtin.user:
    name: "{{ cloudflared_container_user }}"
    system: yes
    shell: /sbin/nologin
    home: "/home/{{ cloudflared_container_user }}"
    create_home: yes
    groups:
      - systemd-journal

- name: Add subids for system user
  ansible.builtin.command: usermod --add-subids-for-system {{ cloudflared_container_user }}
  register: subids_result
  changed_when: subids_result.rc == 0
  failed_when: false

- name: Get cloudflared user info
  ansible.builtin.getent:
    database: passwd
    key: "{{ cloudflared_container_user }}"

- name: Set cloudflared user facts
  ansible.builtin.set_fact:
    cloudflared_uid: "{{ getent_passwd[cloudflared_container_user][1] }}"
    cloudflared_gid: "{{ getent_passwd[cloudflared_container_user][2] }}"
    cloudflared_home: "{{ getent_passwd[cloudflared_container_user][4] }}"

- name: Configure ping group range sysctl
  ansible.builtin.copy:
    dest: /etc/sysctl.d/99-ping-group-range.conf
    content: |
      net.ipv4.ping_group_range=0 2147483647
    owner: root
    group: root
    mode: '0644'
  notify: reload sysctl

- name: Apply sysctl settings
  ansible.builtin.command: sysctl --system
  changed_when: false

- name: Create cloudflared config directory
  ansible.builtin.file:
    path: /etc/cloudflared
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy cloudflared environment file
  ansible.builtin.template:
    src: cloudflared.env.j2
    dest: "{{ cloudflared_env_file }}"
    owner: root
    group: "{{ cloudflared_container_group }}"
    mode: '0640'
  notify: restart cloudflared

- name: Create systemd container directory
  ansible.builtin.file:
    path: "{{ cloudflared_systemd_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy cloudflared container unit file
  ansible.builtin.template:
    src: cloudflared.container.j2
    dest: "{{ cloudflared_systemd_dir }}/cloudflared.container"
    owner: root
    group: root
    mode: '0644'
  notify: restart cloudflared

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable podman-auto-update timer (system)
  ansible.builtin.systemd:
    name: podman-auto-update.timer
    enabled: yes
    state: started

- name: Start cloudflared service
  ansible.builtin.systemd:
    name: "{{ cloudflared_container_name }}.service"
    enabled: yes
    state: started